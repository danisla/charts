apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-hdfs-dn
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/configmaps/hadoop-config.yaml") . | sha256sum }}
  labels:
    app: {{ template "fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: hdfs-dn
spec:
  serviceName: {{ .Release.Name }}-hdfs-dn
  replicas: {{ .Values.hdfs.dataNode.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        component: hdfs-dn
    spec:
      affinity:
        podAntiAffinity:
        {{- if eq .Values.antiAffinity "hard" }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: "kubernetes.io/hostname"
            labelSelector:
              matchLabels:
                app:  {{ template "fullname" . }}
                release: {{ .Release.Name | quote }}
                component: hdfs-dn
        {{- else if eq .Values.antiAffinity "soft" }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 5
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app:  {{ template "fullname" . }}
                  release: {{ .Release.Name | quote }}
                  component: hdfs-dn
        {{- end }}
      terminationGracePeriodSeconds: 0
      containers:
      - name: hdfs-dn
        image: {{ .Values.image }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command:
           - "/bin/bash"
           - "/tmp/hadoop-config/bootstrap.sh"
           - "-d"
        resources:       
{{ toYaml .Values.hdfs.dataNode.resources | indent 10 }}
        readinessProbe:
          httpGet:
            path: /
            port: 50075
          initialDelaySeconds: 5
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /
            port: 50075
          initialDelaySeconds: 10
          timeoutSeconds: 2
        volumeMounts:
          - name: hadoop-config
            mountPath: /tmp/hadoop-config
          - name: dfs
            mountPath: /root/hdfs/datanode
      volumes:
        - name: hadoop-config
          configMap:
            name: {{ .Release.Name }}-config
{{- if not .Values.hdfs.dataNode.persistentVolume.enabled }}
        - name: dfs
          emptyDir: {}
{{- else }}        
  volumeClaimTemplates:
    - metadata:
        name: dfs
        labels:
          app: {{ template "fullname" . }}
          chart: {{ .Chart.Name }}-{{ .Chart.Version }}
          release: {{ .Release.Name }}
          heritage: {{ .Release.Service }}
          component: hdfs-dn
      spec:
        {{- if .Values.hdfs.dataNode.persistentVolume.storageClassName }}
        storageClassName: {{ .Values.hdfs.dataNode.persistentVolume.storageClassName }}
        {{- end }}
        accessModes:
          - {{ .Values.hdfs.dataNode.persistentVolume.accessMode | quote }}
        resources:
          requests:
            storage: {{ .Values.hdfs.dataNode.persistentVolume.size | quote }}
{{- end -}}
